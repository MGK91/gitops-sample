name: Helm deployment CI CD 
on:
  pull_request:
   types:
     - closed
   branches:
     - main
  push:
    branches:
      - dev
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
 docker-build:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout the repository
          uses: actions/checkout@v3
        - name: Setup AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to ECR 
          run: |
             aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        - name: Generate Image Tag (GIT Commit hash)
          id: image_tag
          run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        - name: Build Image
          run: |
            docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/python-flask-app:${{ env.IMAGE_TAG }} .
        - name: Push docker image to Repo
          run: |
            docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/python-flask-app:${{ env.IMAGE_TAG }}
          
 deploy-helm:
       runs-on: ubuntu-latest
       needs: docker-build
       environment: production
       steps:
         - name: Checkout the repository
           uses: actions/checkout@v3
         - name: Setup AWS Credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
         - name: Setup kubectl
           uses: azure/setup-kubectl@v3
         - name: Configure kubeconfig
           run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name tecbay-cluster
         - name: Install helm
           uses: azure/setup-helm@v3
         - name: Deploy with helm
           run: |
             helm upgrade --install python-flask-app --namespace default --set image.repository ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/python-flask-app --set image.tag ${{ env.IMAGE_TAG }}

